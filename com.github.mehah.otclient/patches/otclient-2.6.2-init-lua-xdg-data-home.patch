diff --git a/init.lua b/init.lua
index 92a7d3bd..4143d36c 100644
--- a/init.lua
+++ b/init.lua
@@ -10,8 +10,10 @@ g_game.setForceNewWalkingFormula(false)
 -- set latest supported version
 g_game.setLastSupportedVersion(1291)
 
+local XDG_DATA_HOME = os.getenv('XDG_DATA_HOME') .. '/otclient/'
+
 -- setup logger
-g_logger.setLogFile(g_resources.getWorkDir() .. g_app.getCompactName() .. '.log')
+g_logger.setLogFile(XDG_DATA_HOME .. g_app.getCompactName() .. '.log')
 g_logger.info(os.date('== application started at %b %d %Y %X'))
 
 -- print first terminal message
@@ -20,17 +22,17 @@ g_logger.info(g_app.getName() .. ' ' .. g_app.getVersion() .. ' rev ' .. g_app.g
                   g_app.getBuildArch())
 
 -- add data directory to the search path
-if not g_resources.addSearchPath(g_resources.getWorkDir() .. 'data', true) then
+if not g_resources.addSearchPath(XDG_DATA_HOME .. 'data', true) then
     g_logger.fatal('Unable to add data directory to the search path.')
 end
 
 -- add modules directory to the search path
-if not g_resources.addSearchPath(g_resources.getWorkDir() .. 'modules', true) then
+if not g_resources.addSearchPath(XDG_DATA_HOME .. 'modules', true) then
     g_logger.fatal('Unable to add modules directory to the search path.')
 end
 
 -- try to add mods path too
-g_resources.addSearchPath(g_resources.getWorkDir() .. 'mods', true)
+g_resources.addSearchPath(XDG_DATA_HOME .. 'mods', true)
 
 -- setup directory for saving configurations
 g_resources.setupUserWriteDir(('%s/'):format(g_app.getCompactName()))
@@ -64,3 +66,4 @@ local script = '/' .. g_app.getCompactName() .. 'rc.lua'
 if g_resources.fileExists(script) then
     dofile(script)
 end
+
